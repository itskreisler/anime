{"version":3,"file":"static/js/426.da784584.chunk.js","mappings":"6LAaaA,EAAuB,SAAH,GAAmC,IAAD,IAA5BC,MAAAA,OAAK,MAAG,cAAa,EAC1D,OACE,SAAC,KAAS,WACR,UAAC,KAAU,YACT,SAAC,KAAU,CAACC,KAAK,QAAO,UACtB,SAAC,KAAa,OAEhB,SAAC,KAAQ,CAACC,KAAK,QAAO,SAAEF,QAIhC,EACaG,EAAuB,SAAH,GAAwC,IAAD,IAAjCH,MAAAA,OAAK,MAAG,cAAa,EAAEI,EAAG,EAAHA,IAC5D,OACE,SAAC,KAAS,WACR,UAAC,KAAU,YACT,SAAC,KAAU,CAACH,KAAK,QAAO,UACtB,SAAC,KAAa,CAACI,YAAaD,OAE9B,SAAC,KAAQ,UAAEJ,QAInB,C,qGCoDA,UAzEa,WACX,IAAQM,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAeE,EAAAA,EAAAA,GAAgB,kBAAmB,IAA3CC,GAA8C,YAA1C,GACLC,EAAOD,EAAKE,MAAK,SAACC,GAAC,OAAKA,EAAEC,SAAWC,SAASR,EAAG,IACvD,OAAoB,IAAhBG,EAAKM,QAAqB,8BAAE,WAE9B,SAAC,IAAS,CAACC,QAAQ,SAAC,KAAoB,CAAChB,MAAOU,EAAKV,QAAS,UAC5D,UAAC,KAAO,YACN,SAAC,KAAM,CAACiB,UAAU,yBAAwB,UACxC,SAAC,KAAM,CAACC,OAAO,KAAI,UACjB,UAAC,KAAO,YACN,UAAC,KAAM,CAACD,UAAU,yBAAwB,WACxC,SAAC,KAAM,CAACf,KAAK,OAAOgB,OAAO,IAAG,UAC5B,gBACEC,IAAI,MACJF,UAAU,sDACVG,IAAKV,EAAKW,OAAOC,KAAKC,qBAG1B,UAAC,KAAM,CAACrB,KAAK,KAAKgB,OAAO,IAAG,WAE1B,SAAC,KAAO,CAACM,MAAO,OAAO,UACrB,gBAAIC,MAAO,CAAEC,WAAY,QAAS,UAAC,WAAShB,EAAKV,YAEnD,UAAC,KAAO,CAACwB,MAAO,OAAQC,MAAO,CAAEC,WAAY,QAAS,UAAC,UAC7C,IACPhB,EAAKiB,OAAOC,KAAI,WAAWC,GAAC,IAATC,EAAI,EAAJA,KAAI,OACtB,SAAC,KAAO,CAASN,MAAM,YAAW,SAAEM,GAAtBD,EAAqC,cAO3D,UAAC,KAAa,YACZ,SAAC,KAAY,UAAC,iBACd,UAAC,KAAe,WAAC,cAAYnB,EAAKqB,gBAGpC,UAAC,KAAc,WAAC,sBAAkBrB,EAAKsB,KAAuBtB,EAAKsB,KAArB,yBAIpD,UAAC,KAAM,YACL,SAAC,KAAM,CAACC,OAAO,IAAI/B,KAAK,KAAKgB,OAAO,IAAG,UACrC,SAAC,KAAO,WACN,SAAC,KAAc,WACf,eAAGO,MAAO,CAAES,UAAW,WAAY,WACnC,4BAAQ,iBAAkB,IAAExB,EAAKyB,mBAKrC,UAAC,KAAM,CAACC,OAAO,IAAIlC,KAAK,KAAKgB,OAAO,IAAG,WACrC,SAAC,KAAO,WACN,SAAC,KAAc,UAAC,oBAElB,SAAC,KAAO,WACN,SAAC,KAAc,UAAC,gBAElB,SAAC,KAAO,WACN,SAAC,KAAc,UAAC,kBAElB,SAAC,KAAO,WACN,SAAC,KAAc,UAAC,0BAO9B,C","sources":["components/TagHeader.jsx","pages/Page.jsx"],"sourcesContent":["import {\r\n  IonHeader,\r\n  IonToolbar,\r\n  IonButtons,\r\n  IonTitle,\r\n  IonMenuButton,\r\n  IonBackButton,\r\n  IonIcon,\r\n  IonText,\r\n  IonItem\r\n} from '@ionic/react'\r\nimport Platform from 'react-platform-js'\r\n\r\nexport const TagHeaderWithMenuBtn = ({ title = 'placeholder' }) => {\r\n  return (\r\n    <IonHeader>\r\n      <IonToolbar>\r\n        <IonButtons slot=\"start\">\r\n          <IonMenuButton />\r\n        </IonButtons>\r\n        <IonTitle size=\"large\">{title}</IonTitle>\r\n      </IonToolbar>\r\n    </IonHeader>\r\n  )\r\n}\r\nexport const TagHeaderWithBackBtn = ({ title = 'placeholder', url }) => {\r\n  return (\r\n    <IonHeader>\r\n      <IonToolbar>\r\n        <IonButtons slot=\"start\">\r\n          <IonBackButton defaultHref={url} />\r\n        </IonButtons>\r\n        <IonTitle>{title}</IonTitle>\r\n      </IonToolbar>\r\n    </IonHeader>\r\n  )\r\n}\r\nexport const TagHeaderWithoutBtn = ({ title = 'placeholder' }) => {\r\n  return (\r\n    <IonHeader collapse={'' /* condense */}>\r\n      <IonToolbar>\r\n        <IonTitle>{title}</IonTitle>\r\n      </IonToolbar>\r\n    </IonHeader>\r\n  )\r\n}\r\nexport const TagHeaderWithBackAndAnotherBtn = ({\r\n  title = 'placeholder',\r\n  url = '',\r\n  handleCLick,\r\n  color,\r\n  icon = { ios: '', md: '' }\r\n}) => {\r\n  return (\r\n    <IonHeader>\r\n      <IonToolbar>\r\n        <IonItem lines=\"none\">\r\n          <IonButtons slot=\"start\">\r\n            <IonBackButton defaultHref={url} />\r\n          </IonButtons>\r\n          {Platform.OS === 'iOS'\r\n            ? (\r\n            <IonText>{title}</IonText>\r\n              )\r\n            : (\r\n            <IonTitle>{title}</IonTitle>\r\n              )}\r\n          <IonItem\r\n            slot={'end'}\r\n            style={{ cursor: 'pointer' }}\r\n            onClick={handleCLick}\r\n            lines=\"none\"\r\n            detail={false}\r\n          >\r\n            <IonIcon\r\n              color={color}\r\n              slot=\"end\"\r\n              size=\"large\"\r\n              ios={icon.ios}\r\n              md={icon.md}\r\n            />\r\n          </IonItem>\r\n        </IonItem>\r\n      </IonToolbar>\r\n    </IonHeader>\r\n  )\r\n}\r\n","import { useParams } from 'react-router'\nimport TagLayout from '../components/TagLayout'\nimport {\n  IonCol,\n  IonGrid,\n  IonRow,\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle, IonText, IonChip\n} from '@ionic/react'\nimport { useLocalStorage } from '../hooks/use-local-storage'\nimport { TagHeaderWithBackBtn } from '../components/TagHeader'\n\nconst Page = () => {\n  const { id } = useParams()\n  const [info] = useLocalStorage('PageInicio:info', [])\n  const data = info.find((_) => _.mal_id === parseInt(id))\n  if (info.length === 0) return <>Error</>\n  return (\n    <TagLayout header={<TagHeaderWithBackBtn title={data.title}/>}>\n      <IonGrid>\n        <IonRow className=\"justify-content-center\">\n          <IonCol sizeLg=\"12\">\n            <IonCard>\n              <IonRow className=\"justify-content-center\">\n                <IonCol size=\"auto\" sizeLg=\"4\">\n                  <img\n                    alt=\"...\"\n                    className=\"cover-anime object-fit-cover d-flex mx-auto rounded\"\n                    src={data.images.webp.large_image_url}\n                  />\n                </IonCol>\n                <IonCol size=\"12\" sizeLg=\"8\">\n\n                  <IonText color={'dark'}>\n                    <h5 style={{ marginLeft: '16px' }}>Nombre: {data.title}</h5>\n                  </IonText>\n                  <IonText color={'dark'} style={{ marginLeft: '16px' }}>\n                    Genero:{' '}\n                    {data.genres.map(({ name }, i) => (\n                      <IonChip key={i} color=\"secondary\">{name}</IonChip>\n                    ))}\n                  </IonText>\n\n                </IonCol>\n              </IonRow>\n\n              <IonCardHeader>\n                <IonCardTitle>Temporadas:</IonCardTitle>\n                <IonCardSubtitle>Episodios: {data.episodes}</IonCardSubtitle>\n              </IonCardHeader>\n\n              <IonCardContent>Año de emision: {!data.year ? 'No definido' : data.year}</IonCardContent>\n            </IonCard>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol pushLg=\"4\" size=\"12\" sizeLg=\"8\">\n            <IonCard>\n              <IonCardContent>\n              <p style={{ textAlign: 'justify' }}>\n              <strong>Sinópsis:</strong> {data.synopsis}\n            </p>\n              </IonCardContent>\n            </IonCard>\n          </IonCol>\n          <IonCol pullLg=\"8\" size=\"12\" sizeLg=\"4\">\n            <IonCard>\n              <IonCardContent>Animación</IonCardContent>\n            </IonCard>\n            <IonCard>\n              <IonCardContent>Historia</IonCardContent>\n            </IonCard>\n            <IonCard>\n              <IonCardContent>Personajes</IonCardContent>\n            </IonCard>\n            <IonCard>\n              <IonCardContent>Música</IonCardContent>\n            </IonCard>\n          </IonCol>\n        </IonRow>\n      </IonGrid>\n    </TagLayout>\n  )\n}\n\nexport default Page\n"],"names":["TagHeaderWithMenuBtn","title","slot","size","TagHeaderWithBackBtn","url","defaultHref","id","useParams","useLocalStorage","info","data","find","_","mal_id","parseInt","length","header","className","sizeLg","alt","src","images","webp","large_image_url","color","style","marginLeft","genres","map","i","name","episodes","year","pushLg","textAlign","synopsis","pullLg"],"sourceRoot":""}