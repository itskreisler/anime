{"version":3,"file":"static/js/426.4b69728d.chunk.js","mappings":"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","sources":["components/TagHeader.jsx","pages/Page.jsx"],"sourcesContent":["import {\r\n  IonHeader,\r\n  IonToolbar,\r\n  IonButtons,\r\n  IonTitle,\r\n  IonMenuButton,\r\n  IonBackButton,\r\n  IonIcon,\r\n  IonText,\r\n  IonItem\r\n} from '@ionic/react'\r\nimport Platform from 'react-platform-js'\r\n\r\nexport const TagHeaderWithMenuBtn = ({ title = 'placeholder' }) => {\r\n  return (\r\n    <IonHeader>\r\n      <IonToolbar>\r\n        <IonButtons slot=\"start\">\r\n          <IonMenuButton />\r\n        </IonButtons>\r\n        <IonTitle>{title}</IonTitle>\r\n      </IonToolbar>\r\n    </IonHeader>\r\n  )\r\n}\r\nexport const TagHeaderWithBackBtn = ({ title = 'placeholder', url }) => {\r\n  return (\r\n    <IonHeader>\r\n      <IonToolbar>\r\n        <IonButtons slot=\"start\">\r\n          <IonBackButton defaultHref={url} />\r\n        </IonButtons>\r\n        <IonTitle>{title}</IonTitle>\r\n      </IonToolbar>\r\n    </IonHeader>\r\n  )\r\n}\r\nexport const TagHeaderWithoutBtn = ({ title = 'placeholder' }) => {\r\n  return (\r\n    <IonHeader collapse={'' /* condense */}>\r\n      <IonToolbar>\r\n        <IonTitle>{title}</IonTitle>\r\n      </IonToolbar>\r\n    </IonHeader>\r\n  )\r\n}\r\nexport const TagHeaderWithBackAndAnotherBtn = ({\r\n  title = 'placeholder',\r\n  url = '',\r\n  handleCLick,\r\n  color,\r\n  icon = { ios: '', md: '' }\r\n}) => {\r\n  return (\r\n    <IonHeader>\r\n      <IonToolbar>\r\n        <IonItem lines=\"none\">\r\n          <IonButtons slot=\"start\">\r\n            <IonBackButton defaultHref={url} />\r\n          </IonButtons>\r\n          {Platform.OS === 'iOS'\r\n            ? (\r\n            <IonText>{title}</IonText>\r\n              )\r\n            : (\r\n            <IonTitle>{title}</IonTitle>\r\n              )}\r\n          <IonItem\r\n            slot={'end'}\r\n            style={{ cursor: 'pointer' }}\r\n            onClick={handleCLick}\r\n            lines=\"none\"\r\n            detail={false}\r\n          >\r\n            <IonIcon\r\n              color={color}\r\n              slot=\"end\"\r\n              size=\"large\"\r\n              ios={icon.ios}\r\n              md={icon.md}\r\n            />\r\n          </IonItem>\r\n        </IonItem>\r\n      </IonToolbar>\r\n    </IonHeader>\r\n  )\r\n}\r\n","import { useParams } from 'react-router'\nimport TagLayout from '../components/TagLayout'\nimport {\n  IonCol,\n  IonGrid,\n  IonRow,\n  IonCard,\n  IonCardContent,\n  IonCardHeader,\n  IonCardSubtitle,\n  IonCardTitle, IonText, IonChip, IonFab, IonNote,\n  IonFabButton,\n  IonIcon\n} from '@ionic/react'\nimport { heartSharp } from 'ionicons/icons'\nimport { useLocalStorage } from '../hooks/use-local-storage'\nimport { TagHeaderWithBackBtn } from '../components/TagHeader'\nimport { useAppContext } from '../context/TagMyAppContext'\nimport { PATHS } from './TagAppPages'\n\nconst Page = () => {\n  const { id } = useParams()\n  const [info] = useLocalStorage('PageInicio:info', [])\n  const data = info.find((_) => _.mal_id === parseInt(id))\n  const { myApp: { setMyAnimeList } } = useAppContext()\n  if (info.length === 0 || typeof data === 'undefined') {\n    return (\n      <TagLayout header={<TagHeaderWithBackBtn title='404' url={PATHS.URL_DEFAULT.path} />}>\n\n      </TagLayout>\n    )\n  }\n\n  const handleSaveAnime = () => {\n    setMyAnimeList(_ => [..._, id])\n  }\n  return (\n    <TagLayout header={<TagHeaderWithBackBtn title={data.title} url={PATHS.URL_DEFAULT.path} />}>\n      <IonGrid>\n        <IonRow className=\"justify-content-center\">\n          <IonCol sizeLg=\"12\">\n            <IonCard>\n              <IonRow className=\"justify-content-center\">\n                <IonCol size=\"auto\" sizeLg=\"4\">\n                  <img\n                    alt=\"...\"\n                    className=\"cover-anime object-fit-cover d-flex mx-auto rounded\"\n                    src={data.images.webp.large_image_url}\n                  />\n                </IonCol>\n                <IonCol size=\"12\" sizeLg=\"8\">\n\n                  <IonText color={'dark'}>\n                    <h5 style={{ marginLeft: '16px' }}>Nombre: {data.title}</h5>\n                  </IonText>\n                  <IonText color={'dark'} style={{ marginLeft: '16px' }}>\n                    Genero:{' '}\n                    {data.genres.map(({ name }, i) => (\n                      <IonChip key={i} color=\"secondary\">{name}</IonChip>\n                    ))}\n                  </IonText>\n\n                </IonCol>\n              </IonRow>\n\n              <IonCardHeader>\n                <IonCardTitle>Temporadas:</IonCardTitle>\n                <IonCardSubtitle>Episodios: {data.episodes}</IonCardSubtitle>\n              </IonCardHeader>\n\n              <IonCardContent>Año de emision: {!data.year ? 'No definido' : data.year}</IonCardContent>\n            </IonCard>\n          </IonCol>\n        </IonRow>\n        <IonRow>\n          <IonCol pushLg=\"4\" size=\"12\" sizeLg=\"8\">\n            <IonCard>\n              <IonCardContent>\n                <p style={{ textAlign: 'justify' }}>\n                  <strong>Sinópsis:</strong> {data.synopsis}\n                </p>\n              </IonCardContent>\n            </IonCard>\n          </IonCol>\n          <IonCol pullLg=\"8\" size=\"12\" sizeLg=\"4\">\n            <IonCard>\n              <IonCardContent>\n                <TagItemListLeft title='Format:' text={data.type} />\n                <TagItemListLeft title='Episodes:' text={data.episodes} />\n                <TagItemListLeft title='Episode Duration:' text={data.duration} />\n                <TagItemListLeft title='Status:' text={data.status} />\n\n                <IonText>\n\n                  Start Date:\n                  End Date:\n                  Season:\n                  Average Score:\n                  Mean Score:\n                  Popularity:\n                  Favorites:\n                  Studios:\n                  Producers:\n                  Source:\n                  Hashtag:\n                  Genres:\n                  Romaji:\n                  English:\n                  Native:\n                  Synonyms:\n                </IonText>\n              </IonCardContent>\n            </IonCard>\n            <IonCard>\n              <IonCardContent>Animación</IonCardContent>\n            </IonCard>\n            <IonCard>\n              <IonCardContent>Historia</IonCardContent>\n            </IonCard>\n            <IonCard>\n              <IonCardContent>Personajes</IonCardContent>\n            </IonCard>\n            <IonCard>\n              <IonCardContent>Música</IonCardContent>\n            </IonCard>\n          </IonCol>\n        </IonRow>\n      </IonGrid>\n      <IonFab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n        <IonFabButton\n          onClick={handleSaveAnime}\n          color={'dark'}\n          size=\"small\"\n        >\n          <IonIcon icon={heartSharp} size=\"large\" color='danger' />\n        </IonFabButton>\n      </IonFab>\n    </TagLayout>\n  )\n}\nconst TagItemListLeft = ({ title = 'placeholder', text = 'placeholder' }) => {\n  return (\n    <div style={{ paddingBottom: '14px' }}>\n      <div>\n        <IonText color={'dark'}>\n          {title}\n        </IonText>\n      </div>\n      <div>\n        <IonNote>{text}</IonNote>\n      </div>\n    </div>\n  )\n}\n\nexport default Page\n"],"names":["TagHeaderWithMenuBtn","title","slot","TagHeaderWithBackBtn","url","defaultHref","TagItemListLeft","text","style","paddingBottom","color","id","useParams","useLocalStorage","info","data","find","_","mal_id","parseInt","setMyAnimeList","useAppContext","myApp","length","header","PATHS","className","sizeLg","size","alt","src","images","webp","large_image_url","marginLeft","genres","map","i","name","episodes","year","pushLg","textAlign","synopsis","pullLg","type","duration","status","vertical","horizontal","onClick","icon","heartSharp"],"sourceRoot":""}